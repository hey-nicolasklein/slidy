//Copy this CustomPainter code to the Bottom of the File
import 'package:flutter/material.dart';

class RoundedArrow extends StatelessWidget {
  final double width;

  const RoundedArrow({Key? key, required this.width}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return CustomPaint(
      size: Size(width, (width * 2).toDouble()),
      painter: RoundedArrowCustomPainter(),
    );
  }
}

class RoundedArrowCustomPainter extends CustomPainter {
  /// Values generated by "Flutter Shape Maker"
  @override
  void paint(Canvas canvas, Size size) {
    Path path_0 = Path();
    path_0.moveTo(size.width * 0.4375000, size.height * 0.9512195);
    path_0.cubicTo(
        size.width * 0.4375000,
        size.height * 0.9714244,
        size.width * 0.4654833,
        size.height * 0.9878049,
        size.width * 0.5000000,
        size.height * 0.9878049);
    path_0.cubicTo(
        size.width * 0.5345167,
        size.height * 0.9878049,
        size.width * 0.5625000,
        size.height * 0.9714244,
        size.width * 0.5625000,
        size.height * 0.9512195);
    path_0.lineTo(size.width * 0.4375000, size.height * 0.9512195);
    path_0.close();
    path_0.moveTo(size.width * 0.5441958, size.height * 0.02291071);
    path_0.cubicTo(
        size.width * 0.5197875,
        size.height * 0.008623268,
        size.width * 0.4802125,
        size.height * 0.008623268,
        size.width * 0.4558042,
        size.height * 0.02291071);
    path_0.lineTo(size.width * 0.05805833, size.height * 0.2557390);
    path_0.cubicTo(
        size.width * 0.03365050,
        size.height * 0.2700268,
        size.width * 0.03365050,
        size.height * 0.2931902,
        size.width * 0.05805833,
        size.height * 0.3074780);
    path_0.cubicTo(
        size.width * 0.08246625,
        size.height * 0.3217659,
        size.width * 0.1220387,
        size.height * 0.3217659,
        size.width * 0.1464467,
        size.height * 0.3074780);
    path_0.lineTo(size.width * 0.5000000, size.height * 0.1005200);
    path_0.lineTo(size.width * 0.8535542, size.height * 0.3074780);
    path_0.cubicTo(
        size.width * 0.8779625,
        size.height * 0.3217659,
        size.width * 0.9175333,
        size.height * 0.3217659,
        size.width * 0.9419417,
        size.height * 0.3074780);
    path_0.cubicTo(
        size.width * 0.9663500,
        size.height * 0.2931902,
        size.width * 0.9663500,
        size.height * 0.2700268,
        size.width * 0.9419417,
        size.height * 0.2557390);
    path_0.lineTo(size.width * 0.5441958, size.height * 0.02291071);
    path_0.close();
    path_0.moveTo(size.width * 0.5625000, size.height * 0.9512195);
    path_0.lineTo(size.width * 0.5625000, size.height * 0.04878049);
    path_0.lineTo(size.width * 0.4375000, size.height * 0.04878049);
    path_0.lineTo(size.width * 0.4375000, size.height * 0.9512195);
    path_0.lineTo(size.width * 0.5625000, size.height * 0.9512195);
    path_0.close();

    Paint paint0Fill = Paint()..style = PaintingStyle.fill;
    paint0Fill.color = Colors.white.withOpacity(1.0);
    canvas.drawPath(path_0, paint0Fill);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return false;
  }
}
